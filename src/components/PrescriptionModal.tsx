import { motion, AnimatePresence } from 'framer-motion';
import { Download, X, FileText } from 'lucide-react';
import { useState } from 'react';
import jsPDF from 'jspdf';

interface Medication {
  name: string;
  dosage: string;
  frequency: string;
  duration: string;
}

interface PrescriptionData {
  patientName: string;
  consultation: string;
  date: string;
  medications: Medication[];
  notes: string;
}

interface PrescriptionModalProps {
  isOpen: boolean;
  onClose: () => void;
  prescriptionData?: PrescriptionData;
}

export default function PrescriptionModal({ isOpen, onClose, prescriptionData }: PrescriptionModalProps) {
  const [downloadFormat, setDownloadFormat] = useState<'pdf' | 'text'>('pdf');

  const defaultPrescription: PrescriptionData = prescriptionData || {
    patientName: 'John Doe',
    consultation: 'General Health Consultation',
    date: new Date().toLocaleDateString(),
    medications: [
      {
        name: 'Vitamin C Supplement',
        dosage: '500mg',
        frequency: 'Once daily',
        duration: '30 days'
      },
      {
        name: 'Ibuprofen',
        dosage: '400mg',
        frequency: 'As needed for pain',
        duration: '7 days'
      }
    ],
    notes: 'Take medications with food. Drink plenty of water. Rest well. Consult a doctor if symptoms persist.'
  };

  const generateTextPrescription = (): string => {
    const prescription = defaultPrescription;
    return `
═════════════════════════════════════════════════════════
                    AROGYA HEALTH CONSULTATION
                      PRESCRIPTION DOCUMENT
═════════════════════════════════════════════════════════

Patient Name: ${prescription.patientName}
Consultation Type: ${prescription.consultation}
Date: ${prescription.date}

─────────────────────────────────────────────────────────
MEDICATIONS
─────────────────────────────────────────────────────────

${prescription.medications
  .map(
    (med, index) => `
${index + 1}. ${med.name}
   Dosage: ${med.dosage}
   Frequency: ${med.frequency}
   Duration: ${med.duration}
`
  )
  .join('')}

─────────────────────────────────────────────────────────
IMPORTANT NOTES
─────────────────────────────────────────────────────────
${prescription.notes}

─────────────────────────────────────────────────────────
DISCLAIMER
─────────────────────────────────────────────────────────
This prescription is for informational purposes only and
is NOT a substitute for professional medical advice. Always
consult a certified doctor before starting any medication.
For emergencies, seek immediate medical attention.

Generated by Arogya - AI Health Platform
Visit: https://arogya.health

═════════════════════════════════════════════════════════
`;
  };

  const downloadTextPrescription = () => {
    const text = generateTextPrescription();
    const element = document.createElement('a');
    const file = new Blob([text], { type: 'text/plain' });
    element.href = URL.createObjectURL(file);
    element.download = `prescription_${new Date().getTime()}.txt`;
    document.body.appendChild(element);
    element.click();
    document.body.removeChild(element);
  };

  const downloadPDFPrescription = () => {
    const pdf = new jsPDF();
    const pageHeight = pdf.internal.pageSize.getHeight();
    let yPosition = 20;
    
    // Header
    pdf.setFontSize(20);
    pdf.setTextColor(124, 58, 237); // purple
    pdf.text('AROGYA', 105, yPosition, { align: 'center' });
    
    yPosition += 8;
    pdf.setFontSize(10);
    pdf.setTextColor(100, 100, 100);
    pdf.text('AI Health Consultation Platform', 105, yPosition, { align: 'center' });
    
    yPosition += 8;
    pdf.setFontSize(16);
    pdf.setTextColor(0, 0, 0);
    pdf.text('PRESCRIPTION DOCUMENT', 105, yPosition, { align: 'center' });
    
    yPosition += 15;
    pdf.setDrawColor(124, 58, 237);
    pdf.line(20, yPosition - 2, 190, yPosition - 2);
    
    // Patient Info
    yPosition += 10;
    pdf.setFontSize(11);
    pdf.setTextColor(0, 0, 0);
    pdf.text(`Patient Name: ${defaultPrescription.patientName}`, 20, yPosition);
    
    yPosition += 7;
    pdf.text(`Consultation Type: ${defaultPrescription.consultation}`, 20, yPosition);
    
    yPosition += 7;
    pdf.text(`Date: ${defaultPrescription.date}`, 20, yPosition);
    
    // Medications Section
    yPosition += 15;
    pdf.setFontSize(12);
    pdf.setTextColor(124, 58, 237);
    pdf.text('MEDICATIONS', 20, yPosition);
    
    yPosition += 8;
    pdf.setDrawColor(200, 200, 200);
    pdf.line(20, yPosition - 2, 190, yPosition - 2);
    
    yPosition += 5;
    pdf.setFontSize(10);
    pdf.setTextColor(0, 0, 0);
    
    defaultPrescription.medications.forEach((med, index) => {
      if (yPosition > pageHeight - 40) {
        pdf.addPage();
        yPosition = 20;
      }
      
      pdf.setFont(undefined, 'bold');
      pdf.text(`${index + 1}. ${med.name}`, 25, yPosition);
      
      yPosition += 6;
      pdf.setFont(undefined, 'normal');
      pdf.text(`Dosage: ${med.dosage}`, 30, yPosition);
      
      yPosition += 5;
      pdf.text(`Frequency: ${med.frequency}`, 30, yPosition);
      
      yPosition += 5;
      pdf.text(`Duration: ${med.duration}`, 30, yPosition);
      
      yPosition += 10;
    });
    
    // Notes Section
    if (yPosition > pageHeight - 50) {
      pdf.addPage();
      yPosition = 20;
    }
    
    yPosition += 5;
    pdf.setFontSize(12);
    pdf.setTextColor(124, 58, 237);
    pdf.text('INSTRUCTIONS', 20, yPosition);
    
    yPosition += 8;
    pdf.setDrawColor(200, 200, 200);
    pdf.line(20, yPosition - 2, 190, yPosition - 2);
    
    yPosition += 5;
    pdf.setFontSize(10);
    pdf.setTextColor(0, 0, 0);
    const wrappedNotes = pdf.splitTextToSize(defaultPrescription.notes, 170);
    pdf.text(wrappedNotes, 20, yPosition);
    
    yPosition += wrappedNotes.length * 5 + 10;
    
    // Disclaimer
    if (yPosition > pageHeight - 40) {
      pdf.addPage();
      yPosition = 20;
    }
    
    pdf.setFontSize(10);
    pdf.setTextColor(184, 134, 11); // dark gold
    pdf.text('⚠️ DISCLAIMER', 20, yPosition);
    
    yPosition += 7;
    pdf.setFontSize(9);
    pdf.setTextColor(80, 80, 80);
    const disclaimerText = 'This prescription is for informational purposes only and is NOT a substitute for professional medical advice. Always consult a certified doctor before starting any medication. For emergencies, seek immediate medical attention.';
    const wrappedDisclaimer = pdf.splitTextToSize(disclaimerText, 170);
    pdf.text(wrappedDisclaimer, 20, yPosition);
    
    // Footer
    yPosition = pageHeight - 15;
    pdf.setFontSize(8);
    pdf.setTextColor(150, 150, 150);
    pdf.text('Generated by Arogya - AI Health Platform | https://arogya.health', 105, yPosition, { align: 'center' });
    
    pdf.save(`prescription_${new Date().getTime()}.pdf`);
  };

  return (
    <AnimatePresence>
      {isOpen && (
        <>
          {/* Backdrop */}
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            onClick={onClose}
            className="fixed inset-0 bg-black bg-opacity-50 z-40"
          />

          {/* Modal */}
          <motion.div
            initial={{ opacity: 0, scale: 0.95, y: 20 }}
            animate={{ opacity: 1, scale: 1, y: 0 }}
            exit={{ opacity: 0, scale: 0.95, y: 20 }}
            transition={{ duration: 0.3 }}
            className="fixed inset-0 z-50 flex items-center justify-center p-4"
          >
            <div className="bg-white rounded-xl shadow-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto">
              {/* Header */}
              <div className="sticky top-0 bg-white border-b border-neutral-200 p-6 flex items-center justify-between">
                <div className="flex items-center space-x-3">
                  <div className="w-10 h-10 bg-primary-100 rounded-lg flex items-center justify-center">
                    <FileText className="w-6 h-6 text-primary-600" />
                  </div>
                  <h2 className="text-2xl font-bold text-neutral-900">Prescription</h2>
                </div>
                <motion.button
                  whileHover={{ scale: 1.1 }}
                  whileTap={{ scale: 0.95 }}
                  onClick={onClose}
                  className="p-2 hover:bg-neutral-100 rounded-lg transition-colors"
                >
                  <X className="w-5 h-5 text-neutral-600" />
                </motion.button>
              </div>

              {/* Content */}
              <div className="p-6 space-y-6">
                {/* Preview */}
                <div className="bg-neutral-50 rounded-lg p-6 border border-neutral-200 space-y-4">
                  <h3 className="text-lg font-semibold text-neutral-900">Prescription Details</h3>

                  <div className="grid grid-cols-2 gap-4 text-sm">
                    <div>
                      <p className="text-neutral-600 font-medium">Patient Name</p>
                      <p className="text-neutral-900">{defaultPrescription.patientName}</p>
                    </div>
                    <div>
                      <p className="text-neutral-600 font-medium">Date</p>
                      <p className="text-neutral-900">{defaultPrescription.date}</p>
                    </div>
                    <div className="col-span-2">
                      <p className="text-neutral-600 font-medium">Consultation Type</p>
                      <p className="text-neutral-900">{defaultPrescription.consultation}</p>
                    </div>
                  </div>

                  {/* Medications */}
                  <div className="mt-6">
                    <h4 className="font-semibold text-neutral-900 mb-3">Medications</h4>
                    <div className="space-y-3">
                      {defaultPrescription.medications.map((med, index) => (
                        <div
                          key={index}
                          className="bg-white border border-primary-200 rounded-lg p-4 border-l-4 border-l-primary-600"
                        >
                          <p className="font-semibold text-neutral-900">{med.name}</p>
                          <div className="text-sm text-neutral-600 mt-2 space-y-1">
                            <p>Dosage: {med.dosage}</p>
                            <p>Frequency: {med.frequency}</p>
                            <p>Duration: {med.duration}</p>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>

                  {/* Notes */}
                  <div className="bg-secondary-50 border border-secondary-200 rounded-lg p-4">
                    <h4 className="font-semibold text-neutral-900 mb-2">Important Notes</h4>
                    <p className="text-sm text-neutral-700">{defaultPrescription.notes}</p>
                  </div>

                  {/* Disclaimer */}
                  <div className="bg-accent-50 border border-accent-200 rounded-lg p-4 border-l-4 border-l-accent-500">
                    <p className="text-xs text-neutral-900 font-semibold mb-2">⚠️ DISCLAIMER</p>
                    <p className="text-xs text-neutral-700">
                      This prescription is for informational purposes only and is NOT a substitute for professional
                      medical advice. Always consult a certified doctor before starting any medication. For emergencies,
                      seek immediate medical attention.
                    </p>
                  </div>
                </div>

                {/* Download Options */}
                <div className="space-y-3">
                  <h3 className="text-lg font-semibold text-neutral-900">Download Prescription</h3>

                  <div className="grid grid-cols-3 gap-3">
                    <motion.button
                      whileHover={{ scale: 1.02 }}
                      whileTap={{ scale: 0.98 }}
                      onClick={downloadPDFPrescription}
                      className="flex-1 bg-red-600 hover:bg-red-700 text-white font-semibold px-4 py-3 rounded-lg transition-colors flex items-center justify-center space-x-2"
                    >
                      <Download className="w-4 h-4" />
                      <span className="hidden sm:inline">PDF</span>
                    </motion.button>

                    <motion.button
                      whileHover={{ scale: 1.02 }}
                      whileTap={{ scale: 0.98 }}
                      onClick={downloadTextPrescription}
                      className="flex-1 bg-primary-600 hover:bg-primary-700 text-white font-semibold px-4 py-3 rounded-lg transition-colors flex items-center justify-center space-x-2"
                    >
                      <Download className="w-4 h-4" />
                      <span className="hidden sm:inline">Text</span>
                    </motion.button>

                    <motion.button
                      whileHover={{ scale: 1.02 }}
                      whileTap={{ scale: 0.98 }}
                      onClick={downloadTextPrescription}
                      className="flex-1 bg-emerald-600 hover:bg-emerald-700 text-white font-semibold px-4 py-3 rounded-lg transition-colors flex items-center justify-center space-x-2"
                    >
                      <Download className="w-4 h-4" />
                      <span className="hidden sm:inline">HTML</span>
                    </motion.button>
                  </div>

                  <div className="bg-primary-50 border border-primary-200 rounded-lg p-4 text-sm text-primary-900">
                    <p>
                      <strong>Tip:</strong> You can also print this prescription directly from your browser using
                      Ctrl+P (or Cmd+P on Mac) and save as PDF.
                    </p>
                  </div>
                </div>
              </div>

              {/* Footer */}
              <div className="border-t border-neutral-200 p-6 flex justify-end">
                <motion.button
                  whileHover={{ scale: 1.02 }}
                  whileTap={{ scale: 0.98 }}
                  onClick={onClose}
                  className="px-6 py-2 bg-neutral-200 text-neutral-900 rounded-lg font-medium hover:bg-neutral-300 transition-colors"
                >
                  Close
                </motion.button>
              </div>
            </div>
          </motion.div>
        </>
      )}
    </AnimatePresence>
  );
}
